

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Apr 09 10:41:31 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0004                     fsr             equ	4
    48     0004                     fsr0            equ	4
    49     0000                     indf            equ	0
    50     0000                     indf0           equ	0
    51     0002                     pc              equ	2
    52     0002                     pcl             equ	2
    53     000A                     pclath          equ	10
    54     0003                     status          equ	3
    55     0000                     INDF            equ	0	;# 
    56     0001                     TMR0            equ	1	;# 
    57     0002                     PCL             equ	2	;# 
    58     0003                     STATUS          equ	3	;# 
    59     0004                     FSR             equ	4	;# 
    60     0005                     PORTA           equ	5	;# 
    61     0006                     PORTB           equ	6	;# 
    62     0007                     PORTC           equ	7	;# 
    63     0008                     PORTD           equ	8	;# 
    64     0009                     PORTE           equ	9	;# 
    65     000A                     PCLATH          equ	10	;# 
    66     000B                     INTCON          equ	11	;# 
    67     000C                     PIR1            equ	12	;# 
    68     000D                     PIR2            equ	13	;# 
    69     000E                     TMR1            equ	14	;# 
    70     000E                     TMR1L           equ	14	;# 
    71     000F                     TMR1H           equ	15	;# 
    72     0010                     T1CON           equ	16	;# 
    73     0011                     TMR2            equ	17	;# 
    74     0012                     T2CON           equ	18	;# 
    75     0013                     SSPBUF          equ	19	;# 
    76     0014                     SSPCON          equ	20	;# 
    77     0015                     CCPR1           equ	21	;# 
    78     0015                     CCPR1L          equ	21	;# 
    79     0016                     CCPR1H          equ	22	;# 
    80     0017                     CCP1CON         equ	23	;# 
    81     0018                     RCSTA           equ	24	;# 
    82     0019                     TXREG           equ	25	;# 
    83     001A                     RCREG           equ	26	;# 
    84     001B                     CCPR2           equ	27	;# 
    85     001B                     CCPR2L          equ	27	;# 
    86     001C                     CCPR2H          equ	28	;# 
    87     001D                     CCP2CON         equ	29	;# 
    88     001E                     ADRESH          equ	30	;# 
    89     001F                     ADCON0          equ	31	;# 
    90     0081                     OPTION_REG      equ	129	;# 
    91     0085                     TRISA           equ	133	;# 
    92     0086                     TRISB           equ	134	;# 
    93     0087                     TRISC           equ	135	;# 
    94     0088                     TRISD           equ	136	;# 
    95     0089                     TRISE           equ	137	;# 
    96     008C                     PIE1            equ	140	;# 
    97     008D                     PIE2            equ	141	;# 
    98     008E                     PCON            equ	142	;# 
    99     0091                     SSPCON2         equ	145	;# 
   100     0092                     PR2             equ	146	;# 
   101     0093                     SSPADD          equ	147	;# 
   102     0094                     SSPSTAT         equ	148	;# 
   103     0098                     TXSTA           equ	152	;# 
   104     0099                     SPBRG           equ	153	;# 
   105     009C                     CMCON           equ	156	;# 
   106     009D                     CVRCON          equ	157	;# 
   107     009E                     ADRESL          equ	158	;# 
   108     009F                     ADCON1          equ	159	;# 
   109     010C                     EEDATA          equ	268	;# 
   110     010D                     EEADR           equ	269	;# 
   111     010E                     EEDATH          equ	270	;# 
   112     010F                     EEADRH          equ	271	;# 
   113     018C                     EECON1          equ	396	;# 
   114     018D                     EECON2          equ	397	;# 
   115     0000                     INDF            equ	0	;# 
   116     0001                     TMR0            equ	1	;# 
   117     0002                     PCL             equ	2	;# 
   118     0003                     STATUS          equ	3	;# 
   119     0004                     FSR             equ	4	;# 
   120     0005                     PORTA           equ	5	;# 
   121     0006                     PORTB           equ	6	;# 
   122     0007                     PORTC           equ	7	;# 
   123     0008                     PORTD           equ	8	;# 
   124     0009                     PORTE           equ	9	;# 
   125     000A                     PCLATH          equ	10	;# 
   126     000B                     INTCON          equ	11	;# 
   127     000C                     PIR1            equ	12	;# 
   128     000D                     PIR2            equ	13	;# 
   129     000E                     TMR1            equ	14	;# 
   130     000E                     TMR1L           equ	14	;# 
   131     000F                     TMR1H           equ	15	;# 
   132     0010                     T1CON           equ	16	;# 
   133     0011                     TMR2            equ	17	;# 
   134     0012                     T2CON           equ	18	;# 
   135     0013                     SSPBUF          equ	19	;# 
   136     0014                     SSPCON          equ	20	;# 
   137     0015                     CCPR1           equ	21	;# 
   138     0015                     CCPR1L          equ	21	;# 
   139     0016                     CCPR1H          equ	22	;# 
   140     0017                     CCP1CON         equ	23	;# 
   141     0018                     RCSTA           equ	24	;# 
   142     0019                     TXREG           equ	25	;# 
   143     001A                     RCREG           equ	26	;# 
   144     001B                     CCPR2           equ	27	;# 
   145     001B                     CCPR2L          equ	27	;# 
   146     001C                     CCPR2H          equ	28	;# 
   147     001D                     CCP2CON         equ	29	;# 
   148     001E                     ADRESH          equ	30	;# 
   149     001F                     ADCON0          equ	31	;# 
   150     0081                     OPTION_REG      equ	129	;# 
   151     0085                     TRISA           equ	133	;# 
   152     0086                     TRISB           equ	134	;# 
   153     0087                     TRISC           equ	135	;# 
   154     0088                     TRISD           equ	136	;# 
   155     0089                     TRISE           equ	137	;# 
   156     008C                     PIE1            equ	140	;# 
   157     008D                     PIE2            equ	141	;# 
   158     008E                     PCON            equ	142	;# 
   159     0091                     SSPCON2         equ	145	;# 
   160     0092                     PR2             equ	146	;# 
   161     0093                     SSPADD          equ	147	;# 
   162     0094                     SSPSTAT         equ	148	;# 
   163     0098                     TXSTA           equ	152	;# 
   164     0099                     SPBRG           equ	153	;# 
   165     009C                     CMCON           equ	156	;# 
   166     009D                     CVRCON          equ	157	;# 
   167     009E                     ADRESL          equ	158	;# 
   168     009F                     ADCON1          equ	159	;# 
   169     010C                     EEDATA          equ	268	;# 
   170     010D                     EEADR           equ	269	;# 
   171     010E                     EEDATH          equ	270	;# 
   172     010F                     EEADRH          equ	271	;# 
   173     018C                     EECON1          equ	396	;# 
   174     018D                     EECON2          equ	397	;# 
   175                           
   176                           	psect	nvCOMMON
   177     0070                     __pnvCOMMON:
   178     0070                     _pwm90_upper:
   179     0070                     	ds	1
   180     0071                     _pwm90_lower:
   181     0071                     	ds	1
   182     0072                     _pwm60_upper:
   183     0072                     	ds	1
   184     0073                     _pwm60_lower:
   185     0073                     	ds	1
   186     0074                     _pwm20_upper:
   187     0074                     	ds	1
   188     0075                     _pwm20_lower:
   189     0075                     	ds	1
   190     0015                     _CCPR1L         set	21
   191     0011                     _TMR2           set	17
   192     0012                     _T2CON          set	18
   193     0017                     _CCP1CON        set	23
   194     0092                     _TMR2ON         set	146
   195     0092                     _PR2            set	146
   196     0087                     _TRISC          set	135
   197                           
   198                           	psect	cinit
   199     07FC                     start_initialization:	
   200                           ; #config settings
   201                           
   202     07FC                     __initialization:
   203     07FC                     end_of_initialization:	
   204                           ;End of C runtime variable initialization code
   205                           
   206     07FC                     __end_of__initialization:
   207     07FC  0183               	clrf	3
   208     07FD  120A  118A  2F74   	ljmp	_main	;jump to C main() function
   209                           
   210                           	psect	cstackCOMMON
   211     0076                     __pcstackCOMMON:
   212     0076                     ?_pwmInit:
   213     0076                     ?_pwmDutyCycleUpdate:	
   214                           ; 1 bytes @ 0x0
   215                           
   216     0076                     ?_main:	
   217                           ; 1 bytes @ 0x0
   218                           
   219     0076                     ??_pwmInit:	
   220                           ; 1 bytes @ 0x0
   221                           
   222     0076                     ??_pwmDutyCycleUpdate:	
   223                           ; 1 bytes @ 0x0
   224                           
   225                           
   226                           ; 1 bytes @ 0x0
   227     0076                     	ds	3
   228     0079                     ??_main:
   229                           
   230                           	psect	maintext
   231     0774                     __pmaintext:	
   232                           ; 1 bytes @ 0x3
   233 ;;
   234 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   235 ;;
   236 ;; *************** function _main *****************
   237 ;; Defined at:
   238 ;;		line 33 in file "main.c"
   239 ;; Parameters:    Size  Location     Type
   240 ;;		None
   241 ;; Auto vars:     Size  Location     Type
   242 ;;		None
   243 ;; Return value:  Size  Location     Type
   244 ;;                  1    wreg      void 
   245 ;; Registers used:
   246 ;;		wreg, status,2, status,0, pclath, cstack
   247 ;; Tracked objects:
   248 ;;		On entry : B00/0
   249 ;;		On exit  : 0/0
   250 ;;		Unchanged: 0/0
   251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   252 ;;      Params:         0       0       0       0       0
   253 ;;      Locals:         0       0       0       0       0
   254 ;;      Temps:          0       0       0       0       0
   255 ;;      Totals:         0       0       0       0       0
   256 ;;Total ram usage:        0 bytes
   257 ;; Hardware stack levels required when called: 1
   258 ;; This function calls:
   259 ;;		_pwmDutyCycleUpdate
   260 ;;		_pwmInit
   261 ;; This function is called by:
   262 ;;		Startup code after reset
   263 ;; This function uses a non-reentrant model
   264 ;;
   265                           
   266     0774                     _main:	
   267                           ;psect for function _main
   268                           
   269     0774                     l610:	
   270                           ;incstack = 0
   271                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   272                           
   273                           
   274                           ;main.c: 34:     pwmInit();
   275     0774  120A  118A  2782  120A  118A  	fcall	_pwmInit
   276     0779                     l612:
   277                           
   278                           ;main.c: 36:         pwmDutyCycleUpdate();
   279     0779  120A  118A  27A1  120A  118A  	fcall	_pwmDutyCycleUpdate
   280     077E  2F79               	goto	l612
   281     077F  120A  118A  2800   	ljmp	start
   282     0782                     __end_of_main:
   283                           
   284                           	psect	text1
   285     0782                     __ptext1:	
   286 ;; *************** function _pwmInit *****************
   287 ;; Defined at:
   288 ;;		line 40 in file "main.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;		None
   293 ;; Return value:  Size  Location     Type
   294 ;;                  1    wreg      void 
   295 ;; Registers used:
   296 ;;		status,2
   297 ;; Tracked objects:
   298 ;;		On entry : 0/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   302 ;;      Params:         0       0       0       0       0
   303 ;;      Locals:         0       0       0       0       0
   304 ;;      Temps:          0       0       0       0       0
   305 ;;      Totals:         0       0       0       0       0
   306 ;;Total ram usage:        0 bytes
   307 ;; Hardware stack levels used: 1
   308 ;; This function calls:
   309 ;;		Nothing
   310 ;; This function is called by:
   311 ;;		_main
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315     0782                     _pwmInit:	
   316                           ;psect for function _pwmInit
   317                           
   318     0782                     l590:	
   319                           ;incstack = 0
   320                           ; Regs used in _pwmInit: [status,2]
   321                           
   322                           
   323                           ;main.c: 41:     TRISC = 0xFB;
   324     0782  30FB               	movlw	251
   325     0783  1683               	bsf	3,5	;RP0=1, select bank1
   326     0784  1303               	bcf	3,6	;RP1=0, select bank1
   327     0785  0087               	movwf	7	;volatile
   328                           
   329                           ;main.c: 42:     CCP1CON = 0x0C;
   330     0786  300C               	movlw	12
   331     0787  1283               	bcf	3,5	;RP0=0, select bank0
   332     0788  1303               	bcf	3,6	;RP1=0, select bank0
   333     0789  0097               	movwf	23	;volatile
   334                           
   335                           ;main.c: 43:     T2CON = 0x06;
   336     078A  3006               	movlw	6
   337     078B  0092               	movwf	18	;volatile
   338                           
   339                           ;main.c: 44:     PR2 = 0x2F;
   340     078C  302F               	movlw	47
   341     078D  1683               	bsf	3,5	;RP0=1, select bank1
   342     078E  1303               	bcf	3,6	;RP1=0, select bank1
   343     078F  0092               	movwf	18	;volatile
   344                           
   345                           ;main.c: 47:     pwm20_lower = 0x02;
   346     0790  3002               	movlw	2
   347     0791  00F5               	movwf	_pwm20_lower
   348                           
   349                           ;main.c: 48:     pwm20_upper = 0x09;
   350     0792  3009               	movlw	9
   351     0793  00F4               	movwf	_pwm20_upper
   352                           
   353                           ;main.c: 50:     pwm60_lower = 0x01;
   354     0794  3001               	movlw	1
   355     0795  00F3               	movwf	_pwm60_lower
   356                           
   357                           ;main.c: 51:     pwm60_upper = 0x1C;
   358     0796  301C               	movlw	28
   359     0797  00F2               	movwf	_pwm60_upper
   360                           
   361                           ;main.c: 53:     pwm90_lower = 0x01;
   362     0798  3001               	movlw	1
   363     0799  00F1               	movwf	_pwm90_lower
   364                           
   365                           ;main.c: 54:     pwm90_upper = 0x2A;
   366     079A  302A               	movlw	42
   367     079B  00F0               	movwf	_pwm90_upper
   368     079C                     l592:
   369                           
   370                           ;main.c: 56:     TMR2 = 0;
   371     079C  1283               	bcf	3,5	;RP0=0, select bank0
   372     079D  1303               	bcf	3,6	;RP1=0, select bank0
   373     079E  0191               	clrf	17	;volatile
   374     079F                     l594:
   375                           
   376                           ;main.c: 57:     TMR2ON = 1;
   377     079F  1512               	bsf	18,2	;volatile
   378     07A0                     l43:
   379     07A0  0008               	return
   380     07A1                     __end_of_pwmInit:
   381                           
   382                           	psect	text2
   383     07A1                     __ptext2:	
   384 ;; *************** function _pwmDutyCycleUpdate *****************
   385 ;; Defined at:
   386 ;;		line 60 in file "main.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;		None
   389 ;; Auto vars:     Size  Location     Type
   390 ;;		None
   391 ;; Return value:  Size  Location     Type
   392 ;;                  1    wreg      void 
   393 ;; Registers used:
   394 ;;		wreg, status,2, status,0
   395 ;; Tracked objects:
   396 ;;		On entry : 0/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   400 ;;      Params:         0       0       0       0       0
   401 ;;      Locals:         0       0       0       0       0
   402 ;;      Temps:          3       0       0       0       0
   403 ;;      Totals:         3       0       0       0       0
   404 ;;Total ram usage:        3 bytes
   405 ;; Hardware stack levels used: 1
   406 ;; This function calls:
   407 ;;		Nothing
   408 ;; This function is called by:
   409 ;;		_main
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413     07A1                     _pwmDutyCycleUpdate:	
   414                           ;psect for function _pwmDutyCycleUpdate
   415                           
   416     07A1                     l596:	
   417                           ;incstack = 0
   418                           ; Regs used in _pwmDutyCycleUpdate: [wreg+status,2+status,0]
   419                           
   420                           
   421                           ;main.c: 62:     CCPR1L = pwm20_upper;
   422     07A1  0874               	movf	_pwm20_upper,w
   423     07A2  1283               	bcf	3,5	;RP0=0, select bank0
   424     07A3  1303               	bcf	3,6	;RP1=0, select bank0
   425     07A4  0095               	movwf	21	;volatile
   426     07A5                     l598:
   427                           
   428                           ;main.c: 63:     CCP1CON &= ~(0x3 << 4);
   429     07A5  30CF               	movlw	207
   430     07A6  0597               	andwf	23,f	;volatile
   431     07A7                     l600:
   432                           
   433                           ;main.c: 64:     CCP1CON |= (pwm20_lower << 4);
   434     07A7  0875               	movf	_pwm20_lower,w	;volatile
   435     07A8  00F6               	movwf	??_pwmDutyCycleUpdate
   436     07A9  3003               	movlw	3
   437     07AA                     u15:
   438     07AA  1003               	clrc
   439     07AB  0DF6               	rlf	??_pwmDutyCycleUpdate,f
   440     07AC  3EFF               	addlw	-1
   441     07AD  1D03               	skipz
   442     07AE  2FAA               	goto	u15
   443     07AF  1003               	clrc
   444     07B0  0D76               	rlf	??_pwmDutyCycleUpdate,w
   445     07B1  0497               	iorwf	23,f	;volatile
   446                           
   447                           ;main.c: 65:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   448     07B2  3017               	movlw	23
   449     07B3  00F8               	movwf	??_pwmDutyCycleUpdate+2
   450     07B4  30D5               	movlw	213
   451     07B5  00F7               	movwf	??_pwmDutyCycleUpdate+1
   452     07B6  3016               	movlw	22
   453     07B7  00F6               	movwf	??_pwmDutyCycleUpdate
   454     07B8                     u47:
   455     07B8  0BF6               	decfsz	??_pwmDutyCycleUpdate,f
   456     07B9  2FB8               	goto	u47
   457     07BA  0BF7               	decfsz	??_pwmDutyCycleUpdate+1,f
   458     07BB  2FB8               	goto	u47
   459     07BC  0BF8               	decfsz	??_pwmDutyCycleUpdate+2,f
   460     07BD  2FB8               	goto	u47
   461     07BE  0000               	nop
   462                           
   463                           ;main.c: 68:     CCPR1L = pwm60_upper;
   464     07BF  0872               	movf	_pwm60_upper,w
   465     07C0  1283               	bcf	3,5	;RP0=0, select bank0
   466     07C1  1303               	bcf	3,6	;RP1=0, select bank0
   467     07C2  0095               	movwf	21	;volatile
   468     07C3                     l602:
   469                           
   470                           ;main.c: 69:     CCP1CON &= ~(0x3 << 4);
   471     07C3  30CF               	movlw	207
   472     07C4  0597               	andwf	23,f	;volatile
   473     07C5                     l604:
   474                           
   475                           ;main.c: 70:     CCP1CON |= (pwm60_lower << 4);
   476     07C5  0873               	movf	_pwm60_lower,w	;volatile
   477     07C6  00F6               	movwf	??_pwmDutyCycleUpdate
   478     07C7  3003               	movlw	3
   479     07C8                     u25:
   480     07C8  1003               	clrc
   481     07C9  0DF6               	rlf	??_pwmDutyCycleUpdate,f
   482     07CA  3EFF               	addlw	-1
   483     07CB  1D03               	skipz
   484     07CC  2FC8               	goto	u25
   485     07CD  1003               	clrc
   486     07CE  0D76               	rlf	??_pwmDutyCycleUpdate,w
   487     07CF  0497               	iorwf	23,f	;volatile
   488                           
   489                           ;main.c: 71:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   490     07D0  3017               	movlw	23
   491     07D1  00F8               	movwf	??_pwmDutyCycleUpdate+2
   492     07D2  30D5               	movlw	213
   493     07D3  00F7               	movwf	??_pwmDutyCycleUpdate+1
   494     07D4  3016               	movlw	22
   495     07D5  00F6               	movwf	??_pwmDutyCycleUpdate
   496     07D6                     u57:
   497     07D6  0BF6               	decfsz	??_pwmDutyCycleUpdate,f
   498     07D7  2FD6               	goto	u57
   499     07D8  0BF7               	decfsz	??_pwmDutyCycleUpdate+1,f
   500     07D9  2FD6               	goto	u57
   501     07DA  0BF8               	decfsz	??_pwmDutyCycleUpdate+2,f
   502     07DB  2FD6               	goto	u57
   503     07DC  0000               	nop
   504                           
   505                           ;main.c: 74:     CCPR1L = pwm90_upper;
   506     07DD  0870               	movf	_pwm90_upper,w
   507     07DE  1283               	bcf	3,5	;RP0=0, select bank0
   508     07DF  1303               	bcf	3,6	;RP1=0, select bank0
   509     07E0  0095               	movwf	21	;volatile
   510     07E1                     l606:
   511                           
   512                           ;main.c: 75:     CCP1CON &= ~(0x3 << 4);
   513     07E1  30CF               	movlw	207
   514     07E2  0597               	andwf	23,f	;volatile
   515     07E3                     l608:
   516                           
   517                           ;main.c: 76:     CCP1CON |= (pwm90_lower << 4);
   518     07E3  0871               	movf	_pwm90_lower,w	;volatile
   519     07E4  00F6               	movwf	??_pwmDutyCycleUpdate
   520     07E5  3003               	movlw	3
   521     07E6                     u35:
   522     07E6  1003               	clrc
   523     07E7  0DF6               	rlf	??_pwmDutyCycleUpdate,f
   524     07E8  3EFF               	addlw	-1
   525     07E9  1D03               	skipz
   526     07EA  2FE6               	goto	u35
   527     07EB  1003               	clrc
   528     07EC  0D76               	rlf	??_pwmDutyCycleUpdate,w
   529     07ED  0497               	iorwf	23,f	;volatile
   530                           
   531                           ;main.c: 77:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   532     07EE  3017               	movlw	23
   533     07EF  00F8               	movwf	??_pwmDutyCycleUpdate+2
   534     07F0  30D5               	movlw	213
   535     07F1  00F7               	movwf	??_pwmDutyCycleUpdate+1
   536     07F2  3016               	movlw	22
   537     07F3  00F6               	movwf	??_pwmDutyCycleUpdate
   538     07F4                     u67:
   539     07F4  0BF6               	decfsz	??_pwmDutyCycleUpdate,f
   540     07F5  2FF4               	goto	u67
   541     07F6  0BF7               	decfsz	??_pwmDutyCycleUpdate+1,f
   542     07F7  2FF4               	goto	u67
   543     07F8  0BF8               	decfsz	??_pwmDutyCycleUpdate+2,f
   544     07F9  2FF4               	goto	u67
   545     07FA  0000               	nop
   546     07FB                     l46:
   547     07FB  0008               	return
   548     07FC                     __end_of_pwmDutyCycleUpdate:
   549     0002                     ___latbits      equ	2
   550     007E                     btemp           set	126	;btemp
   551     007E                     wtemp0          set	126
   552                           
   553                           	psect	config
   554                           
   555                           ;Config register CONFIG @ 0x2007
   556                           ;	Oscillator Selection bits
   557                           ;	FOSC = HS, HS oscillator
   558                           ;	Watchdog Timer Enable bit
   559                           ;	WDTE = OFF, WDT disabled
   560                           ;	Power-up Timer Enable bit
   561                           ;	PWRTE = OFF, PWRT disabled
   562                           ;	Brown-out Reset Enable bit
   563                           ;	BOREN = OFF, BOR disabled
   564                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   565                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   566                           ;	Data EEPROM Memory Code Protection bit
   567                           ;	CPD = OFF, Data EEPROM code protection off
   568                           ;	Flash Program Memory Write Enable bits
   569                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   570                           ;	In-Circuit Debugger Mode bit
   571                           ;	DEBUG = 0x1, unprogrammed default
   572                           ;	Flash Program Memory Code Protection bit
   573                           ;	CP = OFF, Code protection off
   574     2007                     	org	8199
   575     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_pwmDutyCycleUpdate

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                 _pwmDutyCycleUpdate
                            _pwmInit
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwmDutyCycleUpdate                                   3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _pwmDutyCycleUpdate
   _pwmInit

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      3       9     64.3%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       9      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Apr 09 10:41:31 2025

                        l43 07A0                          l46 07FB                          u15 07AA  
                        u25 07C8                          u35 07E6                          u47 07B8  
                        u57 07D6                          u67 07F4                         l600 07A7  
                       l602 07C3                         l610 0774                         l604 07C5  
                       l612 0779                         l606 07E1                         l608 07E3  
                       l590 0782                         l592 079C                         l594 079F  
                       l596 07A1                         l598 07A5                         _PR2 0092  
                      _TMR2 0011                        _main 0774                        btemp 007E  
                      start 0000                       ?_main 0076                       _T2CON 0012  
                     _TRISC 0087             __end_of_pwmInit 07A1                       status 0003  
                     wtemp0 007E             __initialization 07FC                __end_of_main 0782  
                    ??_main 0079                      _CCPR1L 0015                      _TMR2ON 0092  
                 ??_pwmInit 0076  __end_of_pwmDutyCycleUpdate 07FC     __end_of__initialization 07FC  
            __pcstackCOMMON 0076                  __pnvCOMMON 0070                  __pmaintext 0774  
                   _CCP1CON 0017                     __ptext1 0782                     __ptext2 07A1  
                   _pwmInit 0782        end_of_initialization 07FC          _pwmDutyCycleUpdate 07A1  
       ?_pwmDutyCycleUpdate 0076         start_initialization 07FC        ??_pwmDutyCycleUpdate 0076  
                 ___latbits 0002                    ?_pwmInit 0076                 _pwm20_lower 0075  
               _pwm20_upper 0074                 _pwm60_lower 0073                 _pwm60_upper 0072  
               _pwm90_lower 0071                 _pwm90_upper 0070  
