

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Apr 09 10:59:42 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     9                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0004                     fsr             equ	4
    49     0004                     fsr0            equ	4
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0002                     pc              equ	2
    53     0002                     pcl             equ	2
    54     000A                     pclath          equ	10
    55     0003                     status          equ	3
    56     0000                     INDF            equ	0	;# 
    57     0001                     TMR0            equ	1	;# 
    58     0002                     PCL             equ	2	;# 
    59     0003                     STATUS          equ	3	;# 
    60     0004                     FSR             equ	4	;# 
    61     0005                     PORTA           equ	5	;# 
    62     0006                     PORTB           equ	6	;# 
    63     0007                     PORTC           equ	7	;# 
    64     0008                     PORTD           equ	8	;# 
    65     0009                     PORTE           equ	9	;# 
    66     000A                     PCLATH          equ	10	;# 
    67     000B                     INTCON          equ	11	;# 
    68     000C                     PIR1            equ	12	;# 
    69     000D                     PIR2            equ	13	;# 
    70     000E                     TMR1            equ	14	;# 
    71     000E                     TMR1L           equ	14	;# 
    72     000F                     TMR1H           equ	15	;# 
    73     0010                     T1CON           equ	16	;# 
    74     0011                     TMR2            equ	17	;# 
    75     0012                     T2CON           equ	18	;# 
    76     0013                     SSPBUF          equ	19	;# 
    77     0014                     SSPCON          equ	20	;# 
    78     0015                     CCPR1           equ	21	;# 
    79     0015                     CCPR1L          equ	21	;# 
    80     0016                     CCPR1H          equ	22	;# 
    81     0017                     CCP1CON         equ	23	;# 
    82     0018                     RCSTA           equ	24	;# 
    83     0019                     TXREG           equ	25	;# 
    84     001A                     RCREG           equ	26	;# 
    85     001B                     CCPR2           equ	27	;# 
    86     001B                     CCPR2L          equ	27	;# 
    87     001C                     CCPR2H          equ	28	;# 
    88     001D                     CCP2CON         equ	29	;# 
    89     001E                     ADRESH          equ	30	;# 
    90     001F                     ADCON0          equ	31	;# 
    91     0081                     OPTION_REG      equ	129	;# 
    92     0085                     TRISA           equ	133	;# 
    93     0086                     TRISB           equ	134	;# 
    94     0087                     TRISC           equ	135	;# 
    95     0088                     TRISD           equ	136	;# 
    96     0089                     TRISE           equ	137	;# 
    97     008C                     PIE1            equ	140	;# 
    98     008D                     PIE2            equ	141	;# 
    99     008E                     PCON            equ	142	;# 
   100     0091                     SSPCON2         equ	145	;# 
   101     0092                     PR2             equ	146	;# 
   102     0093                     SSPADD          equ	147	;# 
   103     0094                     SSPSTAT         equ	148	;# 
   104     0098                     TXSTA           equ	152	;# 
   105     0099                     SPBRG           equ	153	;# 
   106     009C                     CMCON           equ	156	;# 
   107     009D                     CVRCON          equ	157	;# 
   108     009E                     ADRESL          equ	158	;# 
   109     009F                     ADCON1          equ	159	;# 
   110     010C                     EEDATA          equ	268	;# 
   111     010D                     EEADR           equ	269	;# 
   112     010E                     EEDATH          equ	270	;# 
   113     010F                     EEADRH          equ	271	;# 
   114     018C                     EECON1          equ	396	;# 
   115     018D                     EECON2          equ	397	;# 
   116     0000                     INDF            equ	0	;# 
   117     0001                     TMR0            equ	1	;# 
   118     0002                     PCL             equ	2	;# 
   119     0003                     STATUS          equ	3	;# 
   120     0004                     FSR             equ	4	;# 
   121     0005                     PORTA           equ	5	;# 
   122     0006                     PORTB           equ	6	;# 
   123     0007                     PORTC           equ	7	;# 
   124     0008                     PORTD           equ	8	;# 
   125     0009                     PORTE           equ	9	;# 
   126     000A                     PCLATH          equ	10	;# 
   127     000B                     INTCON          equ	11	;# 
   128     000C                     PIR1            equ	12	;# 
   129     000D                     PIR2            equ	13	;# 
   130     000E                     TMR1            equ	14	;# 
   131     000E                     TMR1L           equ	14	;# 
   132     000F                     TMR1H           equ	15	;# 
   133     0010                     T1CON           equ	16	;# 
   134     0011                     TMR2            equ	17	;# 
   135     0012                     T2CON           equ	18	;# 
   136     0013                     SSPBUF          equ	19	;# 
   137     0014                     SSPCON          equ	20	;# 
   138     0015                     CCPR1           equ	21	;# 
   139     0015                     CCPR1L          equ	21	;# 
   140     0016                     CCPR1H          equ	22	;# 
   141     0017                     CCP1CON         equ	23	;# 
   142     0018                     RCSTA           equ	24	;# 
   143     0019                     TXREG           equ	25	;# 
   144     001A                     RCREG           equ	26	;# 
   145     001B                     CCPR2           equ	27	;# 
   146     001B                     CCPR2L          equ	27	;# 
   147     001C                     CCPR2H          equ	28	;# 
   148     001D                     CCP2CON         equ	29	;# 
   149     001E                     ADRESH          equ	30	;# 
   150     001F                     ADCON0          equ	31	;# 
   151     0081                     OPTION_REG      equ	129	;# 
   152     0085                     TRISA           equ	133	;# 
   153     0086                     TRISB           equ	134	;# 
   154     0087                     TRISC           equ	135	;# 
   155     0088                     TRISD           equ	136	;# 
   156     0089                     TRISE           equ	137	;# 
   157     008C                     PIE1            equ	140	;# 
   158     008D                     PIE2            equ	141	;# 
   159     008E                     PCON            equ	142	;# 
   160     0091                     SSPCON2         equ	145	;# 
   161     0092                     PR2             equ	146	;# 
   162     0093                     SSPADD          equ	147	;# 
   163     0094                     SSPSTAT         equ	148	;# 
   164     0098                     TXSTA           equ	152	;# 
   165     0099                     SPBRG           equ	153	;# 
   166     009C                     CMCON           equ	156	;# 
   167     009D                     CVRCON          equ	157	;# 
   168     009E                     ADRESL          equ	158	;# 
   169     009F                     ADCON1          equ	159	;# 
   170     010C                     EEDATA          equ	268	;# 
   171     010D                     EEADR           equ	269	;# 
   172     010E                     EEDATH          equ	270	;# 
   173     010F                     EEADRH          equ	271	;# 
   174     018C                     EECON1          equ	396	;# 
   175     018D                     EECON2          equ	397	;# 
   176                           
   177                           	psect	nvCOMMON
   178     0070                     __pnvCOMMON:
   179     0070                     _pwm80_upper:
   180     0070                     	ds	1
   181     0071                     _pwm50_upper:
   182     0071                     	ds	1
   183     0072                     _pwm10_upper:
   184     0072                     	ds	1
   185     0073                     _pwm10_lower:
   186     0073                     	ds	1
   187     0015                     _CCPR1L         set	21
   188     0011                     _TMR2           set	17
   189     0012                     _T2CON          set	18
   190     0017                     _CCP1CON        set	23
   191     0092                     _TMR2ON         set	146
   192     0092                     _PR2            set	146
   193     0087                     _TRISC          set	135
   194                           
   195                           	psect	cinit
   196     07FA                     start_initialization:	
   197                           ; #config settings
   198                           
   199     07FA                     __initialization:
   200                           
   201                           ; Clear objects allocated to COMMON
   202     07FA  01F7               	clrf	__pbssCOMMON& (0+127)
   203     07FB  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   204     07FC                     end_of_initialization:	
   205                           ;End of C runtime variable initialization code
   206                           
   207     07FC                     __end_of__initialization:
   208     07FC  0183               	clrf	3
   209     07FD  120A  118A  2F74   	ljmp	_main	;jump to C main() function
   210                           
   211                           	psect	bssCOMMON
   212     0077                     __pbssCOMMON:
   213     0077                     _pwm80_lower:
   214     0077                     	ds	1
   215     0078                     _pwm50_lower:
   216     0078                     	ds	1
   217                           
   218                           	psect	cstackCOMMON
   219     0074                     __pcstackCOMMON:
   220     0074                     ?_pwmInit:
   221     0074                     ?_pwmDutyCycleUpdate:	
   222                           ; 1 bytes @ 0x0
   223                           
   224     0074                     ?_main:	
   225                           ; 1 bytes @ 0x0
   226                           
   227     0074                     ??_pwmInit:	
   228                           ; 1 bytes @ 0x0
   229                           
   230     0074                     ??_pwmDutyCycleUpdate:	
   231                           ; 1 bytes @ 0x0
   232                           
   233                           
   234                           ; 1 bytes @ 0x0
   235     0074                     	ds	3
   236     0077                     ??_main:
   237                           
   238                           	psect	maintext
   239     0774                     __pmaintext:	
   240                           ; 1 bytes @ 0x3
   241 ;;
   242 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   243 ;;
   244 ;; *************** function _main *****************
   245 ;; Defined at:
   246 ;;		line 29 in file "main.c"
   247 ;; Parameters:    Size  Location     Type
   248 ;;		None
   249 ;; Auto vars:     Size  Location     Type
   250 ;;		None
   251 ;; Return value:  Size  Location     Type
   252 ;;                  1    wreg      void 
   253 ;; Registers used:
   254 ;;		wreg, status,2, status,0, pclath, cstack
   255 ;; Tracked objects:
   256 ;;		On entry : B00/0
   257 ;;		On exit  : 0/0
   258 ;;		Unchanged: 0/0
   259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   260 ;;      Params:         0       0       0       0       0
   261 ;;      Locals:         0       0       0       0       0
   262 ;;      Temps:          0       0       0       0       0
   263 ;;      Totals:         0       0       0       0       0
   264 ;;Total ram usage:        0 bytes
   265 ;; Hardware stack levels required when called: 1
   266 ;; This function calls:
   267 ;;		_pwmDutyCycleUpdate
   268 ;;		_pwmInit
   269 ;; This function is called by:
   270 ;;		Startup code after reset
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           
   274     0774                     _main:	
   275                           ;psect for function _main
   276                           
   277     0774                     l614:	
   278                           ;incstack = 0
   279                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   280                           
   281                           
   282                           ;main.c: 31:     pwmInit();
   283     0774  120A  118A  2782  120A  118A  	fcall	_pwmInit
   284     0779                     l616:
   285                           
   286                           ;main.c: 33:     {;main.c: 34:         pwmDutyCycleUpdate();
   287     0779  120A  118A  279F  120A  118A  	fcall	_pwmDutyCycleUpdate
   288     077E  2F79               	goto	l616
   289     077F  120A  118A  2800   	ljmp	start
   290     0782                     __end_of_main:
   291                           
   292                           	psect	text1
   293     0782                     __ptext1:	
   294 ;; *************** function _pwmInit *****************
   295 ;; Defined at:
   296 ;;		line 38 in file "main.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;		None
   299 ;; Auto vars:     Size  Location     Type
   300 ;;		None
   301 ;; Return value:  Size  Location     Type
   302 ;;                  1    wreg      void 
   303 ;; Registers used:
   304 ;;		status,2
   305 ;; Tracked objects:
   306 ;;		On entry : 0/0
   307 ;;		On exit  : 0/0
   308 ;;		Unchanged: 0/0
   309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   310 ;;      Params:         0       0       0       0       0
   311 ;;      Locals:         0       0       0       0       0
   312 ;;      Temps:          0       0       0       0       0
   313 ;;      Totals:         0       0       0       0       0
   314 ;;Total ram usage:        0 bytes
   315 ;; Hardware stack levels used: 1
   316 ;; This function calls:
   317 ;;		Nothing
   318 ;; This function is called by:
   319 ;;		_main
   320 ;; This function uses a non-reentrant model
   321 ;;
   322                           
   323     0782                     _pwmInit:	
   324                           ;psect for function _pwmInit
   325                           
   326     0782                     l590:	
   327                           ;incstack = 0
   328                           ; Regs used in _pwmInit: [status,2]
   329                           
   330                           
   331                           ;main.c: 39:     TRISC = 0xFB;
   332     0782  30FB               	movlw	251
   333     0783  1683               	bsf	3,5	;RP0=1, select bank1
   334     0784  1303               	bcf	3,6	;RP1=0, select bank1
   335     0785  0087               	movwf	7	;volatile
   336                           
   337                           ;main.c: 40:     CCP1CON = 0x0C;
   338     0786  300C               	movlw	12
   339     0787  1283               	bcf	3,5	;RP0=0, select bank0
   340     0788  1303               	bcf	3,6	;RP1=0, select bank0
   341     0789  0097               	movwf	23	;volatile
   342                           
   343                           ;main.c: 41:     T2CON = 0x06;
   344     078A  3006               	movlw	6
   345     078B  0092               	movwf	18	;volatile
   346                           
   347                           ;main.c: 42:     PR2 = 0x5E;
   348     078C  305E               	movlw	94
   349     078D  1683               	bsf	3,5	;RP0=1, select bank1
   350     078E  1303               	bcf	3,6	;RP1=0, select bank1
   351     078F  0092               	movwf	18	;volatile
   352                           
   353                           ;main.c: 43:     pwm10_lower = 0x02;
   354     0790  3002               	movlw	2
   355     0791  00F3               	movwf	_pwm10_lower
   356                           
   357                           ;main.c: 44:     pwm10_upper = 0x09;
   358     0792  3009               	movlw	9
   359     0793  00F2               	movwf	_pwm10_upper
   360     0794                     l592:
   361                           
   362                           ;main.c: 46:     pwm50_lower = 0x00;
   363     0794  01F8               	clrf	_pwm50_lower
   364     0795                     l594:
   365                           
   366                           ;main.c: 47:     pwm50_upper = 0x2F;
   367     0795  302F               	movlw	47
   368     0796  00F1               	movwf	_pwm50_upper
   369                           
   370                           ;main.c: 49:     pwm80_lower = 0x00;
   371     0797  01F7               	clrf	_pwm80_lower
   372     0798                     l596:
   373                           
   374                           ;main.c: 50:     pwm80_upper = 0x4B;
   375     0798  304B               	movlw	75
   376     0799  00F0               	movwf	_pwm80_upper
   377                           
   378                           ;main.c: 52:     TMR2 = 0;
   379     079A  1283               	bcf	3,5	;RP0=0, select bank0
   380     079B  1303               	bcf	3,6	;RP1=0, select bank0
   381     079C  0191               	clrf	17	;volatile
   382     079D                     l598:
   383                           
   384                           ;main.c: 53:     TMR2ON = 1;
   385     079D  1512               	bsf	18,2	;volatile
   386     079E                     l43:
   387     079E  0008               	return
   388     079F                     __end_of_pwmInit:
   389                           
   390                           	psect	text2
   391     079F                     __ptext2:	
   392 ;; *************** function _pwmDutyCycleUpdate *****************
   393 ;; Defined at:
   394 ;;		line 56 in file "main.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;		None
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, status,2, status,0
   403 ;; Tracked objects:
   404 ;;		On entry : 0/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   408 ;;      Params:         0       0       0       0       0
   409 ;;      Locals:         0       0       0       0       0
   410 ;;      Temps:          3       0       0       0       0
   411 ;;      Totals:         3       0       0       0       0
   412 ;;Total ram usage:        3 bytes
   413 ;; Hardware stack levels used: 1
   414 ;; This function calls:
   415 ;;		Nothing
   416 ;; This function is called by:
   417 ;;		_main
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421     079F                     _pwmDutyCycleUpdate:	
   422                           ;psect for function _pwmDutyCycleUpdate
   423                           
   424     079F                     l600:	
   425                           ;incstack = 0
   426                           ; Regs used in _pwmDutyCycleUpdate: [wreg+status,2+status,0]
   427                           
   428                           
   429                           ;main.c: 59:     CCPR1L = pwm10_upper;
   430     079F  0872               	movf	_pwm10_upper,w
   431     07A0  1283               	bcf	3,5	;RP0=0, select bank0
   432     07A1  1303               	bcf	3,6	;RP1=0, select bank0
   433     07A2  0095               	movwf	21	;volatile
   434     07A3                     l602:
   435                           
   436                           ;main.c: 60:     CCP1CON &= ~(0x3 << 4);
   437     07A3  30CF               	movlw	207
   438     07A4  0597               	andwf	23,f	;volatile
   439     07A5                     l604:
   440                           
   441                           ;main.c: 61:     CCP1CON |= (pwm10_lower << 4);
   442     07A5  0873               	movf	_pwm10_lower,w	;volatile
   443     07A6  00F4               	movwf	??_pwmDutyCycleUpdate
   444     07A7  3003               	movlw	3
   445     07A8                     u15:
   446     07A8  1003               	clrc
   447     07A9  0DF4               	rlf	??_pwmDutyCycleUpdate,f
   448     07AA  3EFF               	addlw	-1
   449     07AB  1D03               	skipz
   450     07AC  2FA8               	goto	u15
   451     07AD  1003               	clrc
   452     07AE  0D74               	rlf	??_pwmDutyCycleUpdate,w
   453     07AF  0497               	iorwf	23,f	;volatile
   454                           
   455                           ;main.c: 62:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   456     07B0  3017               	movlw	23
   457     07B1  00F6               	movwf	??_pwmDutyCycleUpdate+2
   458     07B2  30D5               	movlw	213
   459     07B3  00F5               	movwf	??_pwmDutyCycleUpdate+1
   460     07B4  3016               	movlw	22
   461     07B5  00F4               	movwf	??_pwmDutyCycleUpdate
   462     07B6                     u47:
   463     07B6  0BF4               	decfsz	??_pwmDutyCycleUpdate,f
   464     07B7  2FB6               	goto	u47
   465     07B8  0BF5               	decfsz	??_pwmDutyCycleUpdate+1,f
   466     07B9  2FB6               	goto	u47
   467     07BA  0BF6               	decfsz	??_pwmDutyCycleUpdate+2,f
   468     07BB  2FB6               	goto	u47
   469     07BC  0000               	nop
   470                           
   471                           ;main.c: 65:     CCPR1L = pwm50_upper;
   472     07BD  0871               	movf	_pwm50_upper,w
   473     07BE  1283               	bcf	3,5	;RP0=0, select bank0
   474     07BF  1303               	bcf	3,6	;RP1=0, select bank0
   475     07C0  0095               	movwf	21	;volatile
   476     07C1                     l606:
   477                           
   478                           ;main.c: 66:     CCP1CON &= ~(0x3 << 4);
   479     07C1  30CF               	movlw	207
   480     07C2  0597               	andwf	23,f	;volatile
   481     07C3                     l608:
   482                           
   483                           ;main.c: 67:     CCP1CON |= (pwm50_lower << 4);
   484     07C3  0878               	movf	_pwm50_lower,w	;volatile
   485     07C4  00F4               	movwf	??_pwmDutyCycleUpdate
   486     07C5  3003               	movlw	3
   487     07C6                     u25:
   488     07C6  1003               	clrc
   489     07C7  0DF4               	rlf	??_pwmDutyCycleUpdate,f
   490     07C8  3EFF               	addlw	-1
   491     07C9  1D03               	skipz
   492     07CA  2FC6               	goto	u25
   493     07CB  1003               	clrc
   494     07CC  0D74               	rlf	??_pwmDutyCycleUpdate,w
   495     07CD  0497               	iorwf	23,f	;volatile
   496                           
   497                           ;main.c: 68:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   498     07CE  3017               	movlw	23
   499     07CF  00F6               	movwf	??_pwmDutyCycleUpdate+2
   500     07D0  30D5               	movlw	213
   501     07D1  00F5               	movwf	??_pwmDutyCycleUpdate+1
   502     07D2  3016               	movlw	22
   503     07D3  00F4               	movwf	??_pwmDutyCycleUpdate
   504     07D4                     u57:
   505     07D4  0BF4               	decfsz	??_pwmDutyCycleUpdate,f
   506     07D5  2FD4               	goto	u57
   507     07D6  0BF5               	decfsz	??_pwmDutyCycleUpdate+1,f
   508     07D7  2FD4               	goto	u57
   509     07D8  0BF6               	decfsz	??_pwmDutyCycleUpdate+2,f
   510     07D9  2FD4               	goto	u57
   511     07DA  0000               	nop
   512                           
   513                           ;main.c: 71:     CCPR1L = pwm80_upper;
   514     07DB  0870               	movf	_pwm80_upper,w
   515     07DC  1283               	bcf	3,5	;RP0=0, select bank0
   516     07DD  1303               	bcf	3,6	;RP1=0, select bank0
   517     07DE  0095               	movwf	21	;volatile
   518     07DF                     l610:
   519                           
   520                           ;main.c: 72:     CCP1CON &= ~(0x3 << 4);
   521     07DF  30CF               	movlw	207
   522     07E0  0597               	andwf	23,f	;volatile
   523     07E1                     l612:
   524                           
   525                           ;main.c: 73:     CCP1CON |= (pwm80_lower << 4);
   526     07E1  0877               	movf	_pwm80_lower,w	;volatile
   527     07E2  00F4               	movwf	??_pwmDutyCycleUpdate
   528     07E3  3003               	movlw	3
   529     07E4                     u35:
   530     07E4  1003               	clrc
   531     07E5  0DF4               	rlf	??_pwmDutyCycleUpdate,f
   532     07E6  3EFF               	addlw	-1
   533     07E7  1D03               	skipz
   534     07E8  2FE4               	goto	u35
   535     07E9  1003               	clrc
   536     07EA  0D74               	rlf	??_pwmDutyCycleUpdate,w
   537     07EB  0497               	iorwf	23,f	;volatile
   538                           
   539                           ;main.c: 74:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   540     07EC  3017               	movlw	23
   541     07ED  00F6               	movwf	??_pwmDutyCycleUpdate+2
   542     07EE  30D5               	movlw	213
   543     07EF  00F5               	movwf	??_pwmDutyCycleUpdate+1
   544     07F0  3016               	movlw	22
   545     07F1  00F4               	movwf	??_pwmDutyCycleUpdate
   546     07F2                     u67:
   547     07F2  0BF4               	decfsz	??_pwmDutyCycleUpdate,f
   548     07F3  2FF2               	goto	u67
   549     07F4  0BF5               	decfsz	??_pwmDutyCycleUpdate+1,f
   550     07F5  2FF2               	goto	u67
   551     07F6  0BF6               	decfsz	??_pwmDutyCycleUpdate+2,f
   552     07F7  2FF2               	goto	u67
   553     07F8  0000               	nop
   554     07F9                     l46:
   555     07F9  0008               	return
   556     07FA                     __end_of_pwmDutyCycleUpdate:
   557     0002                     ___latbits      equ	2
   558     007E                     btemp           set	126	;btemp
   559     007E                     wtemp0          set	126
   560                           
   561                           	psect	config
   562                           
   563                           ;Config register CONFIG @ 0x2007
   564                           ;	Oscillator Selection bits
   565                           ;	FOSC = HS, HS oscillator
   566                           ;	Watchdog Timer Enable bit
   567                           ;	WDTE = OFF, WDT disabled
   568                           ;	Power-up Timer Enable bit
   569                           ;	PWRTE = OFF, PWRT disabled
   570                           ;	Brown-out Reset Enable bit
   571                           ;	BOREN = OFF, BOR disabled
   572                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   573                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   574                           ;	Data EEPROM Memory Code Protection bit
   575                           ;	CPD = OFF, Data EEPROM code protection off
   576                           ;	Flash Program Memory Write Enable bits
   577                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   578                           ;	In-Circuit Debugger Mode bit
   579                           ;	DEBUG = 0x1, unprogrammed default
   580                           ;	Flash Program Memory Code Protection bit
   581                           ;	CP = OFF, Code protection off
   582     2007                     	org	8199
   583     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_pwmDutyCycleUpdate

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                 _pwmDutyCycleUpdate
                            _pwmInit
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwmDutyCycleUpdate                                   3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _pwmDutyCycleUpdate
   _pwmInit

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      3       9     64.3%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       9      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Apr 09 10:59:42 2025

                        l43 079E                          l46 07F9                          u15 07A8  
                        u25 07C6                          u35 07E4                          u47 07B6  
                        u57 07D4                          u67 07F2                         l600 079F  
                       l610 07DF                         l602 07A3                         l612 07E1  
                       l604 07A5                         l606 07C1                         l614 0774  
                       l608 07C3                         l616 0779                         l590 0782  
                       l592 0794                         l594 0795                         l596 0798  
                       l598 079D                         _PR2 0092                        _TMR2 0011  
                      _main 0774                        btemp 007E                        start 0000  
                     ?_main 0074                       _T2CON 0012                       _TRISC 0087  
           __end_of_pwmInit 079F                       status 0003                       wtemp0 007E  
           __initialization 07FA                __end_of_main 0782                      ??_main 0077  
                    _CCPR1L 0015                      _TMR2ON 0092                   ??_pwmInit 0074  
__end_of_pwmDutyCycleUpdate 07FA     __end_of__initialization 07FC              __pcstackCOMMON 0074  
                __pnvCOMMON 0070                  __pmaintext 0774                     _CCP1CON 0017  
                   __ptext1 0782                     __ptext2 079F                     _pwmInit 0782  
      end_of_initialization 07FC          _pwmDutyCycleUpdate 079F         ?_pwmDutyCycleUpdate 0074  
       start_initialization 07FA        ??_pwmDutyCycleUpdate 0074                 __pbssCOMMON 0077  
                 ___latbits 0002                    ?_pwmInit 0074                 _pwm10_lower 0073  
               _pwm10_upper 0072                 _pwm50_lower 0078                 _pwm50_upper 0071  
               _pwm80_lower 0077                 _pwm80_upper 0070  
